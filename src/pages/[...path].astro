---
import heartImage from '@/assets/heart.svg';
import BirthDay from '@/components/birth-day.svelte';
import Card from '@/components/card.astro';
import CardBody from '@/components/card-body.astro';
import ExternalLink from '@/components/external-link.astro';
import { transitionNames } from '@/constants/transition';
import ProfileContent from '@/features/profile/profile-content.astro';
import BaseLayout from '@/layouts/base-layout.astro';

export function getStaticPaths() {
  return [
    { params: { path: 'hyakkano' } },
    { params: { path: 'hyakkano-profile' } },
  ];
}

const { path } = Astro.params;

const isDirect = path === 'hyakkano-profile';

const records: Array<{
  date: [year: number, month: number, date: number];
  content: string;
  link?: string;
}> = [
  {
    date: [2023, 12, 9],
    content: '＠ダッシュストア',
    link: 'https://submarin.online/notes/9n0y8hke3f',
  },
  {
    date: [2024, 2, 14],
    content: 'POP UP SHOP in 新宿マルイ メン',
    link: 'https://submarin.online/notes/9pp6437scx',
  },
  {
    date: [2024, 3, 28],
    content: 'お揃いスマホカバー',
    link: 'https://submarin.online/notes/9res8axnii',
  },
  {
    date: [2024, 4, 26],
    content: 'TSUTAYA POP UP SHOP',
    link: 'https://submarin.online/notes/9sjmu69rfe',
  },
  {
    date: [2024, 6, 8],
    content: '君のことが大大大大大好きな100人の彼女展　Love for Family',
    link: 'https://submarin.online/notes/9u9apnlb6j',
  },
  {
    date: [2024, 11, 15],
    content: '君のことが大大大大大好きな100人の彼女～花蜜庵～',
    link: 'https://submarin.online/notes/a0lub78vu0',
  },
  {
    date: [2024, 11, 23],
    content: '週刊ヤングジャンプ45周年記念 ヤングジャンプ×墨絵SHOP',
    link: 'https://submarin.online/notes/a0x4ziksao',
  },
  {
    date: [2024, 11, 24],
    content: '第1期一挙上映マラソン大会～100カノはスポーツですからね！～',
    link: 'https://submarin.online/notes/a0z3hvi045',
  },
  {
    date: [2025, 2, 28],
    content: 'VIVIgnette 好本 静',
    link: 'https://submarin.online/notes/a4sbxagew6',
  },
  {
    date: [2025, 3, 5],
    content: '飾りました',
    link: 'https://submarin.online/notes/a4zch2tcos',
  },
];
---

<BaseLayout
  title='100カノ'
  description='わざわざこんなページを作ってしまうほど君のことが大大大大大好きな100人の彼女に人生を狂わせられた人の足跡的なページです'
>
  <template id='bg-heart-template'>
    <div class='bg-heart'></div>
  </template>
  <div id='bg-container' style={{
    '--heartImage': `url(${heartImage.src})`,
  }}></div>
  <h1>100カノ</h1>
  <p>
    わざわざこんなページを作ってしまうほど<ExternalLink href='https://hyakkano.com'
    >君のことが大大大大大好きな100人の彼女</ExternalLink>に人生を狂わせられた人の足跡的なページです
  </p>
  <div class='stack'>
    <Card class='card'>
      <CardBody>
        <h2>あなたの100カノはどこから？</h2>
        <p>私はアニメ第1期から</p>
        <p>
          第4話あたりで<ExternalLink
            href='https://submarin.online/notes/9lp0ih3wih'
          >単行本を全巻購入</ExternalLink
          >、そのままジャンプラ→ヤンジャン！へ
        </p>
      </CardBody>
    </Card>
    <Card class='card'>
      <CardBody>
        <h2>特に好きな方々</h2>
        <ul>
          <li>
            <ExternalLink href='https://hyakkano.com/character/shizuka/'
            >好本静</ExternalLink
            >
            <ul>
              <li>誕生日: <BirthDay client:only='svelte' month={10} date={1}/></li>
            </ul>
          </li>
          <li>
            <ExternalLink href='https://hyakkano.com/character/kusuri/'
            >薬膳楠莉</ExternalLink
            >
            <ul>
              <li>誕生日: <BirthDay client:only='svelte' month={3} date={18}/></li>
            </ul>
          </li>
        </ul>
        <details>
          <summary>アニメ未登場</summary>
          <ul>
            <li>
              <span>毛樽井亜愛子衣</span>
              <ul>
                <li>誕生日: <BirthDay client:only='svelte' month={1} date={5}/></li>
              </ul>
            </li>
            <li>
              <span>雪房田夢留</span>
            </li>
            <li>
              <span>端須蓮葉</span>
            </li>
          </ul>
        </details>
      </CardBody>
    </Card>
    <Card class='card'>
      <CardBody>
        <h2>かわいい</h2>
        <ul>
          {Array.from({ length: 5 }, (_, i) => i).map(() => (
            <li>
              <ExternalLink href='https://hyakkano.com/character/shizuka/'
              >好本静ちゃん</ExternalLink>
            </li>
          ))}
        </ul>
        <details>
          <summary>かわいい</summary>
          <ul class='multi-column'>
            {Array.from({ length: 18 }, (_, i) => i).map(() => (
              <li>
                <ExternalLink href='https://hyakkano.com/character/shizuka/'
                >好本静ちゃん</ExternalLink>
              </li>
            ))}
          </ul>
          <p class='gichigichi'><small>ギチギチ〜♥</small></p>
        </details>
      </CardBody>
    </Card>
    <Card class='card'>
      <CardBody>
        <h2>足跡的な</h2>
        <p>新しい順に並んでいます</p>
        <ul>
          {
            records
              .sort((a, b) => {
                const aDate = new Date(a.date[0], a.date[1] - 1, a.date[2]);
                const bDate = new Date(b.date[0], b.date[1] - 1, b.date[2]);
                return bDate.getTime() - aDate.getTime();
              })
              .map(({ date, content, link }) => {
                const [year, month, day] = date;
                const monthStr = month.toString().padStart(2, '0');
                const dayStr = day.toString().padStart(2, '0');
                return (
                  <li class='record-item'>
                    {link
                      ? (
                        <ExternalLink class='record-item-link' href={link}>
                          <span class='record-item-content'><time datetime={`${year}-${monthStr}-${dayStr}`}>{`${year}/${monthStr}/${dayStr}`}</time><span>{content}</span></span>
                        </ExternalLink>
                      )
                      : <span class='record-item-content'><time datetime={`${year}-${monthStr}-${dayStr}`}>{`${year}/${monthStr}/${dayStr}`}</time><span>{content}</span></span>}
                  </li>
                );
              })
          }
        </ul>
      </CardBody>
    </Card>
    {isDirect && (
      <section id='profile'>
        <h2>ところであなたは誰</h2>
        <Card class='card' transition:name={transitionNames.profileCard}>
          <ProfileContent nameElement='p' blurBanner />
          <div class='more-link-container'>
            <a href='/about-me/'>もっと見る</a>
          </div>
        </Card>
      </section>
    )}
  </div>
</BaseLayout>

<style is:global>
  * {
    accent-color: #ef4e7a;
  }

  a {
    color: #ef4e7a;
  }
</style>

<style lang='scss'>
  @use '@/styles/shapes' as s;

  body {
    color: #541309;
    background-color: #fef4f6;
  }

  .card {
    background-color: #ffffffa0;
  }

  .stack {
    display: flex;
    flex-direction: column;
    gap: s.$space;
  }

  #bg-container {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100vh;
    height: 100lvh;
    pointer-events: none;
  }

  .bg-heart {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 75px;
    height: 75px;
    color: #fcdee3;
    background-color: #fcdee3;
    mask: var(--heartImage) no-repeat 50% 50%;
    mask-size: cover;
    transform: translateX(-50%);
  }

  .record-item {
    &:not(:last-of-type) {
      margin-bottom: 0.5rem;
    }

    time {
      font-size: 0.85em;
    }
  }

  .record-item-link {
    display: grid;
    grid-template-columns: 1fr auto;
    column-gap: 0.25em;
    width: fit-content;
  }

  .record-item-content {
    display: flex;
    column-gap: 0.5em;
    align-items: baseline;
  }

  .multi-column {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(9rem, 1fr));
  }

  .gichigichi {
    text-align: right;
  }

  .more-link-container {
    display: flex;
    justify-content: center;
    margin-bottom: calc(s.$space / 2);
  }
</style>

<script>
  // ハートの背景アニメーション
  document.addEventListener("astro:page-load", () => {
    if (location.pathname !== "/hyakkano/" && location.pathname !== "/hyakkano-profile/") return;
    const bgContainer = document.getElementById("bg-container");
    const bgHeartTemplate = document.getElementById("bg-heart-template");

    if (!(bgContainer instanceof HTMLElement)) {
      throw new Error("背景コンテナー要素(#bg-container)が見つかりません。");
    }
    if (!(bgHeartTemplate instanceof HTMLTemplateElement)) {
      throw new Error(
        "ハートのテンプレート要素(#bg-heart-template)が見つかりません。",
      );
    }

    const initBgHeart = (bgHeart: HTMLElement, initialHeight: number) => {
      bgHeart.style.left = `${Math.random() * 100}%`;
      bgHeart.style.bottom = `${initialHeight}px`;
      bgHeart.dataset.speed = (Math.random() * 25 + 25).toString();
    };

    for (let i = 0; i < 30; i++) {
      const bgHeartNode = bgHeartTemplate.content.cloneNode(true);
      if (!(bgHeartNode instanceof DocumentFragment)) {
        throw new Error("ハートのテンプレートのクローンに失敗しました。");
      }
      const bgHeart = bgHeartNode.querySelector(".bg-heart");
      if (!(bgHeart instanceof HTMLElement)) {
        throw new Error("ハート要素(.bg-heart)が見つかりません。");
      }
      initBgHeart(bgHeart, Math.random() * window.innerHeight);
      bgContainer.appendChild(bgHeart);
    }

    let lastTime = window.performance.now();
    let animationFrameId: number;

    const moveBgHearts = (currentTime: number) => {
      const deltaTime = (currentTime - lastTime) / 1000;
      lastTime = currentTime;

      const bgHeartNodeList = bgContainer.querySelectorAll(".bg-heart");
      bgHeartNodeList.forEach((bgHeart) => {
        if (!(bgHeart instanceof HTMLElement)) {
          throw new Error("ハート要素の処理中にエラーが発生しました。");
        }
        const speed = parseFloat(bgHeart.dataset.speed || "100");
        const bottom = parseFloat(bgHeart.style.bottom || "0");
        bgHeart.style.bottom = `${bottom + speed * deltaTime}px`;
        if (bgHeart.getBoundingClientRect().bottom < 0) {
          initBgHeart(bgHeart, bgHeart.clientHeight * -1);
        }
      });
      animationFrameId = requestAnimationFrame(moveBgHearts);
    };

    animationFrameId = requestAnimationFrame(moveBgHearts);

    document.addEventListener("visibilitychange", function () {
      if (document.visibilityState === "hidden") {
        cancelAnimationFrame(animationFrameId);
      } else {
        lastTime = window.performance.now();
        animationFrameId = requestAnimationFrame(moveBgHearts);
      }
    });
  });
</script>
